# RPN计算器使用说明书

## 目录
- [简介](#简介)
- [安装和编译指南](#安装和编译指南)
- [基本使用示例](#基本使用示例)
- [支持的操作说明](#支持的操作说明)
- [错误代码和异常说明](#错误代码和异常说明)
- [示例输入输出](#示例输入输出)

## 简介
RPN计算器是一个基于命令行界面的逆波兰表示法计算器，支持四则运算、栈操作及多种高级数学功能。逆波兰表示法（Reverse Polish Notation）使用后缀表达式，无需括号即可表示运算优先级，适合栈式计算。

## 安装和编译指南

### 前提条件
- C++编译器（如g++）
- 标准C++库
- 数学库（通常随编译器自带）

### 编译步骤
1. 将源代码保存为 `rpn_calc.cpp`
2. 打开终端，导航到源代码所在目录
3. 执行以下编译命令：
   ```bash
   g++ rpn_calc.cpp -o rpn_calc -lm
   ```
   其中，`-lm` 选项用于链接数学库，支持高级数学运算

4. 编译成功后，当前目录会生成可执行文件 `rpn_calc`

## 基本使用示例

### 启动程序
在终端中输入以下命令启动计算器：./rpn_calc
启动成功后，会显示以下提示信息：C++ RPN 计算器
输入表达式 (例, '5 5 +'), 或 'q' 退出.
> 
### 基本计算流程
1. 输入数字和操作符，以空格分隔
2. 按下回车执行计算
3. 程序会显示计算结果

例如，计算 3 + 5：> 3 5 +
结果: 8
### 退出程序
输入 `q` 或 `quit` 并按下回车：> q
## 支持的操作说明

### 四则运算
- `+`：加法，语法 `a b +`（计算 a + b）
- `-`：减法，语法 `a b -`（计算 a - b）
- `*`：乘法，语法 `a b *`（计算 a * b）
- `/`：除法，语法 `a b /`（计算 a / b）

### 栈操作
- `c` 或 `clear`：清空当前栈
- `d` 或 `display`：显示当前栈中的所有元素

### 高级数学运算
- `sqrt`：平方根，语法 `a sqrt`（计算 √a）
- `^`：幂运算，语法 `a b ^`（计算 a^b）

### 数列运算
- `fib`：斐波那契数，语法 `n fib`（计算第n个斐波那契数）
- `yang`：杨辉三角，语法 `n yang`（计算杨辉三角第n行元素之和）

### 历史记录
- `h` 或 `history`：显示计算历史记录

## 错误代码和异常说明

1. **栈为空错误**
   - 描述：当栈为空时尝试弹出元素或执行需要操作数的运算
   - 提示信息：`栈为空，无法弹出元素` 或 `xxx运算需要x个操作数`

2. **除零错误**
   - 描述：除法运算中除数为零
   - 提示信息：`除零错误`

3. **输入格式错误**
   - 描述：输入无法解析为数字或已知操作符
   - 提示信息：`无效的操作符: xxx`

4. **数字范围错误**
   - 描述：输入的数字超出可表示范围
   - 提示信息：`错误: 数字超出范围`

5. **无效参数错误**
   - 描述：操作符接收到无效参数（如负数开平方）
   - 提示信息：`负数不能计算平方根` 或 `xxx运算需要非负整数作为操作数`

## 示例输入输出

### 示例1：基本四则运算> 10 5 +
结果: 15
> 10 5 -
结果: 5
> 10 5 *
结果: 50
> 10 5 /
结果: 2
### 示例2：复杂表达式
计算 (3 + 5) × (10 - 4)：> 3 5 + 10 4 - *
结果: 48
### 示例3：栈操作> 1 2 3 4 d
当前栈: 1 2 3 4 
> 2 + d
当前栈: 1 2 6 
> c
栈已清空
> d
栈为空
### 示例4：高级数学运算> 16 sqrt
结果: 4
> 2 3 ^
结果: 8
> 10 fib
结果: 55
> 5 yang
结果: 16
### 示例5：历史记录> 2 3 +
结果: 5
> 5 4 *
结果: 20
> h
计算历史:
1. 2 3 + => 5
2. 5 4 * => 20    
